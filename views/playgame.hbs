<button id="startbutton">Start Game</button>
<div id="gameArea">
    <canvas id="game"></canvas>
    <div id="deathScreen">
        <div id="gameover">Game Over</div>
        <br>
        Enter your name to be added to the leaderboard
        <form method="POST" action="/game/playgame">
            Name: <input  id="playername" type="text" name="playername">
            <input id="score" type="number" name="score">
            <input id="addScore" type="submit">
        </form>
    </div>
    <div id="hud">
        <h5>Health</h5>
        <div id = "healthbarcontainer"></div>
        <div id = "health"></div>
        <h5 id="currentElementTitle">Current Element</h5>
        <div id = "currentElement">None</div>
        <h5 id="scoreTitle">Score</h5>
        <div id="currentScore">0</div>
    </div>
</div>
<script scr="/scripts/game.js" type="module">
        ////////////////////////////////////////////////////
        import Player from "/scripts/Player.js";
        import Enemy from "/scripts/Enemy.js";
        import checks from "/scripts/checks.js";
        import SpawnTemplate from "/scripts/SpawnTemplate.js";
        import PowerUp from "/scripts/PowerUp.js";
       
        
        const canvas = document.getElementById('game');
        const ctx = canvas.getContext('2d');
        canvas.width = 1000;
        canvas.height = 575;

        const hud = document.getElementById("hud");
        hud.style.height = canvas.height + 'px';
        hud.style.width = canvas.width/3 + 'px'; 

        const deathScreen = document.getElementById('deathScreen');
        deathScreen.style.height = canvas.height + 'px';
        deathScreen.style.width = canvas.width + 'px';
        //deathScreen.style.fontSize = 100 + 'px';
        //deathScreen.style.top = '-' + (canvas.height-90) + 'px';
        const health = document.getElementById("health");

        const scoreDisplay = document.getElementById('currentScore');
////////
        
////////////
        const player = new Player(canvas.width/2, canvas.height/2);
        const enemies = [];
        let powerUps;
        let floatingPowerUps = [];
                

        const levels = [[],[],[]];

        let currentlevel = 0;
        let score = 0;
        levels[0].push(new SpawnTemplate(2, 1, [0], 1, 1 ));
        levels[0].push(new SpawnTemplate(3, 1, [1], 1, 1 ));
        levels[0].push(new SpawnTemplate(2, 1, [2], 1, 1 ));
        levels[0].push(new SpawnTemplate(3, 1, [3], 1, 1 ));
        levels[1].push(new SpawnTemplate(3, 2, [0,2], 2, 1.4));
        levels[1].push(new SpawnTemplate(2, 2, [1,3], 2, 1.4));
        levels[1].push(new SpawnTemplate(3, 2, [0,1], 2, 1.4));
        levels[1].push(new SpawnTemplate(2, 2, [1,2], 2, 1.4));
        levels[1].push(new SpawnTemplate(3, 2, [0,3], 2, 1.4));
        levels[2].push(new SpawnTemplate(4, 2, [0,1,2,3], 2.7, 1.9));

        const spawnFrequency = [5, 10, 15];

        



        let gameInterval;
        let enemySpawnerInterval;
        let f;
        document.getElementById("startbutton").addEventListener("click", async () => {
            const powerUps = await PowerUp.getPowerUps();
            document.getElementById("game").style.visibility = "visible";

            
            gameInterval = setInterval(gameLoop, 1000/60);

            //increaseDifficulty isn't called immediately so it starts at zero
            const increaseDifficultyInterval = setInterval(increaseDifficulty, 1000 * 30);
            
            changeSpawnRate();
            const spawnRateInterval = setInterval(changeSpawnRate, 1000*30);

            increaseScore();
            const scoreInterval = setInterval(increaseScore, 1);
        
            const spawnPowerUpInterval = setInterval(spawnPowerUp, 1000 * 10);
            PowerUp.spawnTop(ctx, canvas.width, powerUps, floatingPowerUps);
            function spawnPowerUp(){
                PowerUp.spawnTop(ctx, canvas.width, powerUps, floatingPowerUps);
            }

            function gameLoop(){
                checks.setNeonStyle(ctx);
                ctx.fillStyle = 'black';
                ctx.fillRect(0,0, canvas.width, canvas.height);
                checks.checkIfEnemyHit(player.bullets, enemies);
                checks.checkIfPlayerHit(enemies, player, gameInterval, health, score, scoreInterval);
                checks.checkIfPowerUpTouched(floatingPowerUps, player, health);
                player.drawBullets(ctx);
                Enemy.drawEnemies(ctx,enemies, player.x, player.y);
                player.drawPlayer(ctx);
                PowerUp.drawPowerUp(ctx,canvas.height, canvas.width, floatingPowerUps);
            }
        });

        

        

        function increaseDifficulty(){
            if(currentlevel < 2){
                currentlevel+=1;
            }
        }

        function changeSpawnRate(){
            SpawnTemplate.spawnEnemies(canvas, enemies, levels[currentlevel]);
            clearInterval(enemySpawnerInterval);
            enemySpawnerInterval = setInterval(() => {
                SpawnTemplate.spawnEnemies(canvas, enemies, levels[currentlevel]);
            }, 1000*spawnFrequency[currentlevel]);
        }

        function increaseScore(){
            score += 1;
            scoreDisplay.innerHTML = score;
            
        }


                

        
        ////////////////////////////////////////////////////
    </script>